name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing -n auto --cov-fail-under=80
      env:
        OPENAI_API_KEY: "mock-key"
        ANTHROPIC_API_KEY: "mock-key"
        SUPABASE_URL: "https://mock.supabase.co"
        SUPABASE_ANON_KEY: "mock-key"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Upload coverage HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-report-${{ matrix.python-version }}
        path: htmlcov/
        if-no-files-found: ignore

  test-summary:
    name: üìä Test Results Summary
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    
    steps:
    - name: Test Summary
      run: |
        echo "üß™ Test Suite Execution Complete"
        echo "üìã Results:"
        echo "  Python 3.11: ${{ needs.test.result }}"
        
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "‚úÖ All tests passed successfully!"
          echo "üéØ Coverage threshold (80%) achieved"
        else
          echo "‚ùå Tests failed or coverage below 80%"
          echo "üìä Check coverage reports for details"
          exit 1
        fi